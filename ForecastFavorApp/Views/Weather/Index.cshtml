@* Specify the model that this view expects, which is the CurrentWeatherResponse *@
@model ForecastFavorLib.Models.CurrentWeatherResponse

@{
    ViewData["Title"] = "Current Weather";
}
@* Display the current weather heading, indicating the location as Sudbury *@
<div class="container mt-5">
    <h2 class="display-4 text-center mb-4">Current Weather in Sudbury</h2>

    @* Start a division to contain the weather details *@
    <div class="card border-primary mb-3">
        <div class="card-body text-center">
            <!-- Display city and country in the card title -->
            <h3 class="card-title mb-4">@Model.Location.Name, @Model.Location.Country</h3>
            <p class="card-text"><strong>Temperature:</strong> <i class="fas fa-temperature-low"> </i>@Model.Current.TemperatureC °C (@Model.Current.TemperatureF °F)</p>
            <p class="card-text"><strong>Condition:</strong> <i class="fa fa-cloud"></i> @(Model.Current.Condition?.Text ?? "Not available")</p>
            <p class="card-text"><strong>Pressure:</strong> @Model.Current.PressureIn inches</p>
            <p class="card-text"><strong>Humidity:</strong> <i class="fa fa-droplet"></i> @Model.Current.Humidity %</p>
            <p class="card-text"><strong>Cloud Cover: <i class="fa fa-cloud"></i> </strong>@Model.Current.Cloud %</p>
            <p class="card-text"><strong>Feels Like:</strong>@Model.Current.FeelsLikeC °C</p>
            <p class="card-text"><strong>Wind Speed: <i class="fa fa-wind"></i> </strong>@Model.Current.WindKph kph</p>
        </div>
    </div>

    @* Button to allow the user to fetch the latest weather data *@
    <button id="fetchWeatherButton" class="btn btn-success btn-lg mt-3">Fetch Weather</button>
</div>

<!-- Include FontAwesome -->
<!-- Use FontAwesome 5.15.3 for more features and icons -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">

<script>document.getElementById("fetchWeatherButton").addEventListener("click", function () {
        // Send a request to the Index action method
        fetch("/Weather/Index")
            .then(response => {
                if (response.ok) {
                    // Handle a successful response
                } else {
                    // Handle error response
                }
            })
            .catch(error => {
                console.error("Error fetching weather data:", error);
            });
    });</script>
